//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNoteMVC.Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MydbEntities : DbContext
    {
        public MydbEntities()
            : base("name=MydbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Designation> Designations { get; set; }
        public virtual DbSet<Eduction> Eductions { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Qualification> Qualifications { get; set; }
        public virtual DbSet<StudentReg> StudentRegs { get; set; }
        public virtual DbSet<Userregistration> Userregistrations { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<Usersubrole> Usersubroles { get; set; }
        public virtual DbSet<Userinfo> Userinfoes { get; set; }
    
        public virtual int AddNewStudent(string name, string city, string address)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddNewStudent", nameParameter, cityParameter, addressParameter);
        }
    
        public virtual int DeleteEmployee(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEmployee", idParameter);
        }
    
        public virtual int DeleteStudent(Nullable<int> stdId)
        {
            var stdIdParameter = stdId.HasValue ?
                new ObjectParameter("StdId", stdId) :
                new ObjectParameter("StdId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteStudent", stdIdParameter);
        }
    
        public virtual ObjectResult<GetAllEmployees_Result> GetAllEmployees()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllEmployees_Result>("GetAllEmployees");
        }
    
        public virtual ObjectResult<GetStudentDetails_Result> GetStudentDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentDetails_Result>("GetStudentDetails");
        }
    
        public virtual int Insertupdateemployee(Nullable<int> eID, string eName, string eEmail, string eMobile, string action)
        {
            var eIDParameter = eID.HasValue ?
                new ObjectParameter("EID", eID) :
                new ObjectParameter("EID", typeof(int));
    
            var eNameParameter = eName != null ?
                new ObjectParameter("EName", eName) :
                new ObjectParameter("EName", typeof(string));
    
            var eEmailParameter = eEmail != null ?
                new ObjectParameter("EEmail", eEmail) :
                new ObjectParameter("EEmail", typeof(string));
    
            var eMobileParameter = eMobile != null ?
                new ObjectParameter("EMobile", eMobile) :
                new ObjectParameter("EMobile", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insertupdateemployee", eIDParameter, eNameParameter, eEmailParameter, eMobileParameter, actionParameter);
        }
    
        public virtual int sp_CreateEmployee(string ename, string designation, string mobileno, string email)
        {
            var enameParameter = ename != null ?
                new ObjectParameter("Ename", ename) :
                new ObjectParameter("Ename", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var mobilenoParameter = mobileno != null ?
                new ObjectParameter("Mobileno", mobileno) :
                new ObjectParameter("Mobileno", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CreateEmployee", enameParameter, designationParameter, mobilenoParameter, emailParameter);
        }
    
        public virtual int SP_DeleteEmployee(Nullable<int> eID)
        {
            var eIDParameter = eID.HasValue ?
                new ObjectParameter("EID", eID) :
                new ObjectParameter("EID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteEmployee", eIDParameter);
        }
    
        public virtual ObjectResult<SP_EmployeeDetail_Result> SP_EmployeeDetail(Nullable<int> eID)
        {
            var eIDParameter = eID.HasValue ?
                new ObjectParameter("EID", eID) :
                new ObjectParameter("EID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EmployeeDetail_Result>("SP_EmployeeDetail", eIDParameter);
        }
    
        public virtual ObjectResult<SP_EmployeeList_Result> SP_EmployeeList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EmployeeList_Result>("SP_EmployeeList");
        }
    
        public virtual ObjectResult<sp_GetdetailEmployee_Result> sp_GetdetailEmployee(Nullable<int> eID)
        {
            var eIDParameter = eID.HasValue ?
                new ObjectParameter("EID", eID) :
                new ObjectParameter("EID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetdetailEmployee_Result>("sp_GetdetailEmployee", eIDParameter);
        }
    
        public virtual int SP_Insertupdateemployee(Nullable<int> eID, string eName, string emobile, string eEmail, string action)
        {
            var eIDParameter = eID.HasValue ?
                new ObjectParameter("EID", eID) :
                new ObjectParameter("EID", typeof(int));
    
            var eNameParameter = eName != null ?
                new ObjectParameter("EName", eName) :
                new ObjectParameter("EName", typeof(string));
    
            var emobileParameter = emobile != null ?
                new ObjectParameter("Emobile", emobile) :
                new ObjectParameter("Emobile", typeof(string));
    
            var eEmailParameter = eEmail != null ?
                new ObjectParameter("EEmail", eEmail) :
                new ObjectParameter("EEmail", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insertupdateemployee", eIDParameter, eNameParameter, emobileParameter, eEmailParameter, actionParameter);
        }
    
        public virtual ObjectResult<sp_listEmployee_Result> sp_listEmployee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listEmployee_Result>("sp_listEmployee");
        }
    
        public virtual int sp_UpdateEmployee(Nullable<int> eID, string ename, string designation, string mobileno, string email)
        {
            var eIDParameter = eID.HasValue ?
                new ObjectParameter("EID", eID) :
                new ObjectParameter("EID", typeof(int));
    
            var enameParameter = ename != null ?
                new ObjectParameter("Ename", ename) :
                new ObjectParameter("Ename", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var mobilenoParameter = mobileno != null ?
                new ObjectParameter("Mobileno", mobileno) :
                new ObjectParameter("Mobileno", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateEmployee", eIDParameter, enameParameter, designationParameter, mobilenoParameter, emailParameter);
        }
    
        public virtual int UpdateEmployee(Nullable<int> id, string eName, string eMobile, string eEmail)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var eNameParameter = eName != null ?
                new ObjectParameter("EName", eName) :
                new ObjectParameter("EName", typeof(string));
    
            var eMobileParameter = eMobile != null ?
                new ObjectParameter("EMobile", eMobile) :
                new ObjectParameter("EMobile", typeof(string));
    
            var eEmailParameter = eEmail != null ?
                new ObjectParameter("EEmail", eEmail) :
                new ObjectParameter("EEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmployee", idParameter, eNameParameter, eMobileParameter, eEmailParameter);
        }
    
        public virtual int UpdateStudentDetails(Nullable<int> stdId, string name, string city, string address)
        {
            var stdIdParameter = stdId.HasValue ?
                new ObjectParameter("StdId", stdId) :
                new ObjectParameter("StdId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStudentDetails", stdIdParameter, nameParameter, cityParameter, addressParameter);
        }
    }
}
